<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on D</title>
    <link>https://dongri.github.io/tags/android/index.xml</link>
    <description>Recent content in Android on D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://dongri.github.io/tags/android/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Suica PASMO リーダー</title>
      <link>https://dongri.github.io/post/2016-12-18-NFC-Reader/</link>
      <pubDate>Sun, 18 Dec 2016 15:58:44 +0900</pubDate>
      
      <guid>https://dongri.github.io/post/2016-12-18-NFC-Reader/</guid>
      <description>&lt;p&gt;最近良く自分のPASMO残高を把握できず、改札口で引っかかって「ファック」と小さい声出した時がよくあって、
AndroidでPASMOの残高を確認できるアプリを探してみたが、どれも必要ない機能ががたくさんあるのとデザインがイマイチ、
且つうざい広告が出るので逆にイラッとしたり、自分のAndroidのせいか分からないが、クラッシュしまくったり、、、&lt;/p&gt;

&lt;p&gt;今週Android Payも出たし、FeliCaとかNFCの勉強も含めてアプリを開発してみようと思ってSuica, PASMOリーダーを作ってみることにした。&lt;/p&gt;

&lt;p&gt;一日でやっつけたもので処理は単純。かざすとアプリが起動して読み取ったデータを表示するだけ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.guncy.android.cardreader&#34;&gt;Play Store - Suica PASMO リーダー&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;参考になったページ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://osdn.net/projects/felicalib/wiki/suica&#34;&gt;FeliCa Library&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.denno.net/SFCardFan/&#34;&gt;路線、駅コード&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://qiita.com/pear510/items/38f94d61c020a17314b6&#34;&gt;AndroidでFelica(NFC)のブロックデータの取得&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ダウンロード数がどれぐらいになるかわからないが、広告入れる予定もないし、機能追加しても課金する予定もないので、
オープンソースにしてメンテナンスして行こうと思います。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/dongri/CardReader&#34;&gt;Github - CardReader&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TODO&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;読み取れる件数は決まってるので、過去のデータを保存する機能&lt;/li&gt;
&lt;li&gt;CSVフォーマットでUSBストレージに保存する機能&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Nexus 5X クリーンインストール &amp; Root化</title>
      <link>https://dongri.github.io/post/2016-05-03-nexus-root/</link>
      <pubDate>Tue, 03 May 2016 01:36:00 +0900</pubDate>
      
      <guid>https://dongri.github.io/post/2016-05-03-nexus-root/</guid>
      <description>

&lt;h2 id=&#34;factory-image&#34;&gt;Factory Image&lt;/h2&gt;

&lt;p&gt;Googleが公開しているNexus端末向けの初期ROMデータのことを言います。
Factory Imageには、「system・boot（Kernel）・recovery・bootloader・radio・userdata・cache」などの各領域のイメージが含まれており、
それらを端末に書き込むことで領域を完全に初期化することが出来ます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developers.google.com/android/nexus/images&#34;&gt;https://developers.google.com/android/nexus/images&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;nexus5xのところの最新のものをダウンロードして解凍する&lt;/p&gt;

&lt;h2 id=&#34;oemロック解除&#34;&gt;OEMロック解除&lt;/h2&gt;

&lt;p&gt;開発者向けオプションで「OEMロック解除を有効にする」にチェックを入れる&lt;/p&gt;

&lt;h2 id=&#34;ブートローダーをアンロック&#34;&gt;ブートローダーをアンロック&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ adb reboot bootloader // もしくは、電源ボタンとボリュームダウンボタンを同時に長押し
$ fastboot oem unlock
...
OKAY [ 20.966s]
finished. total time: 20.966s
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでbootloaderがunlockの状態になる&lt;/p&gt;

&lt;p&gt;&lt;code&gt;DEVICE STATE - locked&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;↓&lt;/p&gt;

&lt;p&gt;&lt;code&gt;DEVICE STATE - unlocked&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;flash-all&#34;&gt;flash-all&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ cd bullhead-mhc19q
$ ./flash-all.sh
...
OKAY [  0.214s]
writing &#39;cache&#39;...
OKAY [  0.061s]
rebooting...

finished. total time: 86.174s
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;カスタムリカバリの導入&#34;&gt;カスタムリカバリの導入&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://twrp.me/devices/lgnexus5x.html&#34;&gt;https://twrp.me/devices/lgnexus5x.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download Links で 最新のimgファイルダウンロードする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ fastboot flash recovery twrp-3.0.2-0-bullhead.img
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ブートローダー画面から「Recovery mode」を選択すると導入したTWRPを起動できるようなりました。&lt;/p&gt;

&lt;h2 id=&#34;root化&#34;&gt;Root化&lt;/h2&gt;

&lt;p&gt;SuperSUの最新版を見つけて入れる。バージョンが違うとAndroid自体が起動できなかったりするのでご注意を&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://download.chainfire.eu/932/SuperSU/BETA-SuperSU-v2.71-20160331103524.zip&#34;&gt;https://download.chainfire.eu/932/SuperSU/BETA-SuperSU-v2.71-20160331103524.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BETA-SuperSU-v2.71-20160331103524.zipを端末に転送して、install&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ adb push BETA-SuperSU-v2.71-20160331103524.zip /sdcard/
4103 KB/s (4015219 bytes in 0.955s)
$ adb reboot bootloader
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Recovery modeを選択して決定、「Install」より先ほどダウンロードしたSuperSUを選択して書き込む。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://g.co/ABH&#34;&gt;http://g.co/ABH&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;警告でるが、電源ボタンを２回押して続ける。&lt;/p&gt;

&lt;p&gt;再起動されるが、めっちゃ遅い&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.&lt;/p&gt;

&lt;p&gt;これでroot取れた。&lt;/p&gt;

&lt;p&gt;やり放題。ubuntu入れて、webサーバー立てる。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android Stagefright</title>
      <link>https://dongri.github.io/post/2015-07-28-android-stagefright/</link>
      <pubDate>Tue, 28 Jul 2015 11:28:57 +0900</pubDate>
      
      <guid>https://dongri.github.io/post/2015-07-28-android-stagefright/</guid>
      <description>

&lt;p&gt;詳しいことはこちら。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://jp.techcrunch.com/2015/07/28/20150727nasty-bug-lets-hackers-into-nearly-any-android-phone-using-nothing-but-a-message/&#34;&gt;Androidに最悪の脆弱性発見―ビデオメッセージを受信するだけでデバイスが乗っ取られる&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ということで、まずSIMを抜いてOSのバージョンアップするようにした。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://plus.google.com/+CyanogenMod/posts/7iuX21Tz7n8&#34;&gt;CyanogenMod: Recent Stagefright issues&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;zip-fileダウンロードしてインストール&#34;&gt;Zip Fileダウンロードしてインストール&lt;/h3&gt;

&lt;p&gt;こちらから最新版cm-12.1をダウンロード。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://download.cyanogenmod.org/?device=bacon&#34;&gt;https://download.cyanogenmod.org/?device=bacon&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ adb push cm-12.1-20150728-NIGHTLY-bacon.zip /sdcard/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;TWRPでinstallを選択して、cm-12.1-20150728-NIGHTLY-bacon.zipを選択してインストール&lt;/p&gt;

&lt;h3 id=&#34;google-appsインストール&#34;&gt;Google Appsインストール&lt;/h3&gt;

&lt;p&gt;CMではデフォルトでGoogle Apps入ってないので、追加でインストールする。
こちらからarmバージョンをダウンロードする。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/cgapps/vendor_google&#34;&gt;https://github.com/cgapps/vendor_google&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ adb push gapps-5.1-arm-2015-07-17-13-29.zip /sdcard/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;TWRPでinstallを選択して、gapps-5.1-arm-2015-07-17-13-29.zipを選択してインストール&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OnePlus One</title>
      <link>https://dongri.github.io/post/2015-04-14-oneplus-one/</link>
      <pubDate>Tue, 14 Apr 2015 11:28:57 +0900</pubDate>
      
      <guid>https://dongri.github.io/post/2015-04-14-oneplus-one/</guid>
      <description>

&lt;h3 id=&#34;1-bootloader-unlock&#34;&gt;1. Bootloader Unlock&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ adb reboot bootloader
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;CyanogenMod Logoが出る&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ fastboot oem unlock
...
OKAY [  0.005s]
finished. total time: 0.005s
$  
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-install-twrp&#34;&gt;2. Install TWRP&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://dl.twrp.me/bacon/&#34;&gt;http://dl.twrp.me/bacon/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;twrp-2.8.6.0-bacon.img ダウンロード&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ adb reboot bootloader

$ fastboot flash recovery twrp-2.8.6.0-bacon.img
target reported max download size of 536870912 bytes
sending &#39;recovery&#39; (10180 KB)...
OKAY [  0.323s]
writing &#39;recovery&#39;...
OKAY [  0.132s]
finished. total time: 0.455s

$ fastboot reboot
rebooting...

finished. total time: 0.005s
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;強制的にtwrp起動する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ fastboot boot twrp-2.8.6.0-bacon.img
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-wipe&#34;&gt;3. Wipe&lt;/h3&gt;

&lt;p&gt;電源ボタンとボリュームダウンボタンを同時に押してTWRPを起動する。
TWRP起動したらwipeを選択して全ての削除する！&lt;/p&gt;

&lt;h3 id=&#34;4-install-oxygen-os&#34;&gt;4. Install Oxygen OS&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://oneplus.net/oxygenos&#34;&gt;https://oneplus.net/oxygenos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;oxygenos_1.0.0.zip ダウンロード&lt;/p&gt;

&lt;p&gt;oxygenos_1.0.0.zip を解凍して oxygenos_1.0.0.flashable.zip を OnePlus One に入れる&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ adb push oxygen_1.0.0_flashable.zip /sdcard/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;TWRPでinstallを選択して、oxygen_1.0.0_flashable.zipを選択してインストール&lt;/p&gt;

&lt;p&gt;SuperSUもインストールするようにする。デバイスが再起動したらもう一度SuperSUを起動してROOTを取る&lt;/p&gt;

&lt;p&gt;以上&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OxygenOS</title>
      <link>https://dongri.github.io/post/2015-04-05-oxygenos/</link>
      <pubDate>Sun, 05 Apr 2015 11:28:57 +0900</pubDate>
      
      <guid>https://dongri.github.io/post/2015-04-05-oxygenos/</guid>
      <description>

&lt;p&gt;(下に追記あり)&lt;/p&gt;

&lt;p&gt;昨日出たOxygenOS 1.0.0について簡単にメモでも残そうかと思って書いた。&lt;/p&gt;

&lt;p&gt;結論から言うと、OxygenOSはやめてCyanogenmod 12Sにした。&lt;/p&gt;

&lt;p&gt;April 3 2015&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.oneplus.net/2015/04/oxygenos-is-here-2/&#34;&gt;OxygenOS is Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://oneplus.net/oxygenos&#34;&gt;https://oneplus.net/oxygenos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://forums.oneplus.net/threads/oxygenos-is-here-installation-guide.289398/&#34;&gt;Installation Guide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;インストールの流れは&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bootloader Unlock&lt;/li&gt;
&lt;li&gt;TWRPをインストール&lt;/li&gt;
&lt;li&gt;oxygenos_1.0.0.flashable.zipを実機に転送&lt;/li&gt;
&lt;li&gt;TWRPでzip指定してインストール&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;コマンドは以下のようになる&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ adb reboot bootloader
$ fastboot oem unlock
$ fastboot flash recovery ***.img
$ fastboot reboot
or
$ fastboot boot ***.img

$ adb push oxygenos_1.0.0.flashable.zip /sdcard/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上の手順で既存OnePlus OneのCyanogenmod 11SからOxygenOSにはアップグレードしたことは成功したが、
人によって、まっさらな状態で綺麗にインストールしたいですよね（私だけ？）&lt;/p&gt;

&lt;p&gt;で、TWRPで全てのデータ削除して、0からOxygenOSをインストールしてみた。結果やばいことになった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;そもそもステータスバー出て来ない。&lt;/li&gt;
&lt;li&gt;画面が真っ黒で壁紙設定できない。&lt;/li&gt;
&lt;li&gt;戻るボタン以外他のボタン効かない。&lt;/li&gt;
&lt;li&gt;ソフトボタンの表示設定しても出て来ない。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;２，３回インストールし直しても結果は同じだった。推測だが、既存OSからOxygenOSにアップグレードはサポートするけど、
クリーンインストールはサポートしてないかという疑惑。&lt;/p&gt;

&lt;p&gt;上で使い物にならなかったので、Cyanogenmodに頼るしかない。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://download.cyanogenmod.org/?device=bacon&amp;amp;type=nightly&#34;&gt;http://download.cyanogenmod.org/?device=bacon&amp;amp;type=nightly&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2015-04-04 04:19:52の最新版があったので、ダウンロードしてインストール。&lt;/p&gt;

&lt;p&gt;これで、綺麗な状態で綺麗にインストール出来たわけだが、CyanogenMod IncとGoogleの関係上CyanogenModにGoogle系appsを入れちゃだめなので、別途インストールするしかない。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://wiki.cyanogenmod.org/w/Google_Apps&#34;&gt;Google Apps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ここでもよいだが、若干古い感じがする。ググって最新版をダウンロードしてインストール。&lt;/p&gt;

&lt;p&gt;その後Cyanogenmod 12Sの上にOxygenOSをインストールしてみてもダメだった。&lt;/p&gt;

&lt;p&gt;ということで、しばらくはOxygenOSは使わないことにした。&lt;/p&gt;

&lt;p&gt;以上、私の端末で起きたことでした。&lt;/p&gt;

&lt;h3 id=&#34;追記-2015-04-09&#34;&gt;追記 (2015/04/09)&lt;/h3&gt;

&lt;p&gt;もう一回oxygenos_1.0.0.zipをダウンロードしてインストールした成功。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ md5 oxygen_1.0.0_flashable.zip
MD5 (oxygen_1.0.0_flashable.zip) = 2d79312774c44d2fa2bf5bb0c877d1b7
$ vim oxygen_1.0.0_flashable.md5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;チェックしたら一致してた。前回ダメだったのは恐らくzipファイルがおかしかったかも。。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nexus5 Lollipop</title>
      <link>https://dongri.github.io/post/2014-11-13-nexus5-lollipop/</link>
      <pubDate>Thu, 13 Nov 2014 11:28:57 +0900</pubDate>
      
      <guid>https://dongri.github.io/post/2014-11-13-nexus5-lollipop/</guid>
      <description>&lt;p&gt;数ヶ月間ずっとAndroid L Preview版入れて使ってたけど、今日やっとGoogleのデベロッパーサイトにNexus5のLollipop Factory Imageが現れたので、手動で入れてみた。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developers.google.com/android/nexus/images&#34;&gt;Factory Images for Nexus Devices&lt;/a&gt;
アクセスして、Nexus5用のimageファイルダウンロード。&lt;a href=&#34;https://dl.google.com/dl/android/aosp/hammerhead-lrx21o-factory-01315e08.tgz&#34;&gt;5.0 (LRX21O)&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tar -zxvf hammerhead-lrx21o-factory-01315e08.tgz
$ cd hammerhead-lrx21o
$ adb reboot bootloader
$ fastboot oem unlock
$ ./flash-all.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pull APK</title>
      <link>https://dongri.github.io/post/2014-11-13-pull-apk/</link>
      <pubDate>Thu, 13 Nov 2014 11:28:57 +0900</pubDate>
      
      <guid>https://dongri.github.io/post/2014-11-13-pull-apk/</guid>
      <description>&lt;p&gt;Androidにあるapkファイルを取り出す方法紹介。&lt;/p&gt;

&lt;p&gt;PlayStoreに「apk 抽出」アプリたくさんあるけど、あえてadb shellで取り出す。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ adb shell pm list packages -f | grep
package:/data/app/jp.naver.line.android-1/base.apk=jp.naver.line.android
package:/data/app/jp.linecorp.LINEMAPS-1/base.apk=jp.linecorp.LINEMAPS

$ adb pull /data/app/jp.naver.line.android-1/base.apk ~/Desktop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;取り出したapkファイルをインストールしてみる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ adb install base.apk
7522 KB/s (22969465 bytes in 2.981s)
        pkg: /data/local/tmp/base.apk
Success
$ adb shell pm list packages -f | grep line
package:/data/app/jp.naver.line.android-1/base.apk=jp.naver.line.android
package:/data/app/jp.linecorp.LINEMAPS-1/base.apk=jp.linecorp.LINEMAPS
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;※ Lollipopからはroot化が困難になった模様&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>